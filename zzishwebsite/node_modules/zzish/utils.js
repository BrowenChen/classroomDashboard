/*
 * Zzish JavaScript SDK
 *
 */

module.exports.shims = function shims() {
	xmlHttpRequest();
	objectKeys();
	consoleLog();
	dateNow();
};

module.exports.decorateInstance = function (object, data, proxy) {
	Object.defineProperty(object, "__proxy", {value : proxy});
	Object.defineProperty(object, "__paths", {value : proxy.config.paths});
	Object.defineProperty(object, "__keys", {value :  Object.keys(data)});
	for (var i=0, l=object.__keys.length, key=null; i<l; i++) {
		key = object.__keys[i];
		object[key] = data[key];
	}
	if (arguments.length > 3) {
		for (var idx=3, len=arguments.length, arg=null, argKeys=null; idx<len; idx++){
			arg = arguments[idx];
			argKeys = Object.keys(arg);
			for (var idx2=0, l2=argKeys.length, value; idx2<l2; idx2++){
				key = argKeys[idx2];
				value = arg[key];
				object[key] = value;
			}
		}
	}
};

function xmlHttpRequest() {
 	// Shim for XMLHttpRequest() constructor in IE5 and IE6
	if (typeof window !== 'undefined' && window.XMLHttpRequest === undefined) {
    window.XMLHttpRequest = function() {
        try {
            // Use the latest version of the ActiveX object if available
            return new ActiveXObject("Msxml2.XMLHTTP.6.0");
        }
        catch (e1) {
            try {
                // Otherwise fall back on an older version
                return new ActiveXObject("Msxml2.XMLHTTP.3.0");
            }
            catch(e2) {
                // Otherwise, throw an error
                throw new Error("XMLHttpRequest is not supported");
            }
        }
    };
	}
}

function consoleLog() {
	// Shim for console log on IE
  // (http://stackoverflow.com/questions/1423267/are-there-any-logging-frameworks-for-javascript#answer-10816237)
  if (typeof console === 'undefined' || !console.log) {
    window.console = {
      debug: function() {},
      trace: function() {},
      log: function() {},
      info: function() {},
      warn: function() {},
      error: function() {}
    };
  }
}

function dateNow() {
	// Shim for Date.now function (IE < 9)
	if (!Date.now) {
	  Date.now = function now() {
	    return new Date().getTime();
    };
	}
}

function objectKeys() {
	// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys
	if (!Object.keys) {
		Object.keys = (function () {
		  'use strict';
		  var hasOwnProperty = Object.prototype.hasOwnProperty,
		      hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),
		      dontEnums = [
		        'toString',
						'toLocaleString',
		        'valueOf',
		        'hasOwnProperty',
		        'isPrototypeOf',
		        'propertyIsEnumerable',
		        'constructor'
		      ],
		      dontEnumsLength = dontEnums.length;

		  return function (obj) {
		    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {
		     throw new TypeError('Object.keys called on non-object');
		    }

		    var result = [], prop, i;

			  for (prop in obj) {
			    if (hasOwnProperty.call(obj, prop)) {
			      result.push(prop);
			    }
			  }
	
		    if (hasDontEnumBug) {
		      for (i = 0; i < dontEnumsLength; i++) {
		        if (hasOwnProperty.call(obj, dontEnums[i])) {
		          result.push(dontEnums[i]);
		        }
		      }
		    }
		    return result;
		  };
		}());
	}
}


