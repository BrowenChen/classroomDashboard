/*
 * Zzish JavaScript SDK
 *
 * Classroom ready module (currently private)
 *
 */

module.exports = Classrooms;
var utils = require('./utils');

function Classrooms(proxy) {
	utils.decorateInstance(this, {}, proxy);
}

/* * * * 
Create Classroom

eg params: AppObject
	{
		name: <name>,
		year: <year>,
		members: <CSVs member list>

	}
return: AppObject
* * * */

Classrooms.prototype.create = function (id, data, callback) {
	var proxy = this.__proxy;
	
	var request = {
		url: this.__proxy.buildUrl(this.__paths.secureusers, id ,'groups'),
		data: data
	};
	this.__proxy.ajax( request, function (err, res) {
		if (err) {
			callback(err, res);
		} else {
			var classroom = new Classroom(res, proxy);
			callback(err, classroom);
		}
	});
};

/* * * * 
Get

eg params: classroom_id
return: ClassroomObject
* * * */

Classrooms.prototype.get = function(id, callback) {
	var proxy = this.__proxy;
	var request = {
		url: proxy.buildUrl(this.__paths.classrooms, id),
		method: "GET",
		data: {}
	};
	
	proxy.ajax( request, function (err, res) {
		if (err) {
			callback(err, res);
		} else {
			var classroom = new Classroom(res, proxy);
			callback(err, classroom);
		}
	});
};

function Classroom(data, proxy){
	utils.decorateInstance(this, data, proxy);
}

Classroom.prototype.update = function(data, callback) {
	var _this = this;
	var request = {
		url: this.__proxy.buildUrl(this.__paths.classrooms, this.id),
		method: 'PUT',
		data : {teacher: this.teacher, name: this.name, students: this.students}
	};
	this.__proxy.ajax(request, function(err, res) {
		if (err) {
			callback(err, res);
		} else {
			utils.decorateInstance(_this, res);
			callback(err, res);
		}
	});
};

Classroom.prototype.delete = function(callback) {
	var request = {
		url: this.__proxy.buildUrl(this.__paths.classrooms, this.id),
		method: 'DELETE',
		data : {}
	};
	this.__proxy.ajax(request, callback);
};


