/*
 * Zzish JavaScript SDK
 *
 */

// Browserify dependencies and export
module.exports = Zzish;
var Proxy = require('./proxy');
var Devices = require('./devices');
var Sessions = require('./sessions');
var Users = require('./users');
var Apps = require('./apps');
var Classrooms = require('./classrooms');
var config = require('./config');
var utils = require('./utils');
var Admins = require('./admins');


// IEEF
var Z = (function(Z){
	utils.shims();
	if (typeof Z.config === 'undefined') {
		Z = new Zzish();
	}
	if (typeof window !== 'undefined' && typeof window.Z === 'undefined') {
		window.Z = Z;
	}
	return Z;
}(Z || {}));


// Main SDK Starts
function Zzish() {
	//console.log('Zzish instantiated');
}

Zzish.prototype.init = function (appId, debug, baseUrl) {
	if (typeof appId === 'object') {
		debug = appId.debug;
		baseUrl = appId.baseUrl;
		appId = appId.appId;
	}
	if (typeof debug === 'undefined') {
		debug = config.debug;
	}
	if (typeof baseUrl === 'undefined') {
		baseUrl = config.baseUrl;
	}
	config.appId = appId;
	config.debug = debug;
	config.baseUrl = baseUrl;
	if (debug) { console.log('Zzish.init', arguments); }
	this.config = config;
	this.proxy = new Proxy(this.config);
	this.devices = new Devices(this.proxy);
	this.sessions = new Sessions(this.proxy);
	this.admins = new Admins(this.proxy);
	this.users = new Users(this.proxy);
	this.classrooms = new Classrooms(this.proxy);
	this.apps = new Apps
	(this.proxy);

	console.log('z initdone');
};


