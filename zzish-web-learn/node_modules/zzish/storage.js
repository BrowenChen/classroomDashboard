/*
 * Zzish JavaScript SDK
 *
 */

module.exports = new Storage();

var config = require('./config'), prefix = config.storage.prefix, debug = config.debug;

function Storage() {
}

Storage.prototype.state = function(module) {
	var state;
	if (typeof window.localStorage != 'undefined' ) {
		state = window.localStorage.getItem(prefix + module);
		if (state === null) {
			if (debug) console.log('Creating new state for', module);
			state = { keys: [],
								lastSend : 0
							};
			window.localStorage.setItem(prefix + module, JSON.stringify(state));
		} else {
			state = JSON.parse(state);
		}
		return state;
	} else {
		return null;
	}
};

Storage.prototype.itemCount = function(module) {
	return this.state(module).keys.length;
};

Storage.prototype.removeItem = function(module,key) {
	window.localStorage.removeItem(key);
	var state = this.state(module);
	for (var i =0, l = state.keys.length; i<l; i++) {
		if (state.keys[i] == key) {
			state.keys = state.keys.splice(i,1);
			break;
		}
	}
	window.localStorage.setItem(prefix + module, state);
};

Storage.prototype.addItem = function(module, request, callback) {
	var key = prefix + module + Date.now(), state = this.state(module);
	var item = JSON.stringify({request: request, callback: callback});
	window.localStorage.setItem(key, item);
	state.keys.push(key);
	window.localStorage.setItem(prefix + module, state);
};
